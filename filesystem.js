// Generated by CoffeeScript 1.6.3
(function() {
  window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;

  window.EditorFileSystem = (function() {
    function EditorFileSystem(root) {
      this.root = root;
    }

    EditorFileSystem.prototype.open = function(path, callback) {
      var failure, read, success,
        _this = this;
      failure = function(error) {
        return callback(null, null);
      };
      success = function(ent) {
        return ent.file(read, failure);
      };
      read = function(file) {
        var reader;
        reader = new FileReader();
        reader.onload = function() {
          var err, node;
          try {
            node = importJson(JSON.parse(reader.result));
          } catch (_error) {
            err = _error;
            callback(null, "error at read: " + err);
            return null;
          }
          return callback(node);
        };
        return reader.readAsText(file);
      };
      return this.root.getFile(path, {}, success, failure);
    };

    EditorFileSystem.prototype.save = function(path, node, callback) {
      var failure, write;
      failure = function(error) {
        if (callback != null) {
          return callback(false, null);
        }
      };
      write = function(entry) {
        return entry.createWriter(function(writer) {
          var blob, data, err, json, trunc;
          try {
            trunc = false;
            writer.onwriteend = function() {
              if (!trunc) {
                trunc = true;
                writer.truncate(this.position);
                return;
              }
              if (callback != null) {
                return callback(true);
              }
            };
            writer.onerror = function(e) {
              console.log("write fail", e);
              if (callback != null) {
                return callback(false);
              }
            };
            json = exportJson(node);
            data = JSON.stringify(json);
            blob = new Blob([data], {
              type: "text/plain"
            });
            return writer.write(blob);
          } catch (_error) {
            err = _error;
            console.log(err);
            if (callback != null) {
              return callback(false);
            }
          }
        });
      };
      return this.root.getFile(path, {
        create: true
      }, write, failure);
    };

    return EditorFileSystem;

  })();

}).call(this);
